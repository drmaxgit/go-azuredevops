// Copyright 2017 The go-github AUTHORS. All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by gen-accessors; DO NOT EDIT.

package azuredevops

import (
	"time"
)

// GetAllowedMappings returns the AllowedMappings field if it's non-nil, zero value otherwise.
func (b *Board) GetAllowedMappings() string {
	if b == nil || b.AllowedMappings == nil {
		return ""
	}
	return *b.AllowedMappings
}

// GetCanEdit returns the CanEdit field if it's non-nil, zero value otherwise.
func (b *Board) GetCanEdit() bool {
	if b == nil || b.CanEdit == nil {
		return false
	}
	return *b.CanEdit
}

// GetFields returns the Fields field.
func (b *Board) GetFields() *BoardFields {
	if b == nil {
		return nil
	}
	return b.Fields
}

// GetIsValid returns the IsValid field if it's non-nil, zero value otherwise.
func (b *Board) GetIsValid() bool {
	if b == nil || b.IsValid == nil {
		return false
	}
	return *b.IsValid
}

// GetRevision returns the Revision field if it's non-nil, zero value otherwise.
func (b *Board) GetRevision() int {
	if b == nil || b.Revision == nil {
		return 0
	}
	return *b.Revision
}

// GetColumnType returns the ColumnType field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetColumnType() string {
	if b == nil || b.ColumnType == nil {
		return ""
	}
	return *b.ColumnType
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetDescription() string {
	if b == nil || b.Description == nil {
		return ""
	}
	return *b.Description
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetID() string {
	if b == nil || b.ID == nil {
		return ""
	}
	return *b.ID
}

// GetIsSplit returns the IsSplit field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetIsSplit() bool {
	if b == nil || b.IsSplit == nil {
		return false
	}
	return *b.IsSplit
}

// GetItemLimit returns the ItemLimit field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetItemLimit() int {
	if b == nil || b.ItemLimit == nil {
		return 0
	}
	return *b.ItemLimit
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetName() string {
	if b == nil || b.Name == nil {
		return ""
	}
	return *b.Name
}

// GetColumnField returns the ColumnField field.
func (b *BoardFields) GetColumnField() *FieldReference {
	if b == nil {
		return nil
	}
	return b.ColumnField
}

// GetDoneField returns the DoneField field.
func (b *BoardFields) GetDoneField() *FieldReference {
	if b == nil {
		return nil
	}
	return b.DoneField
}

// GetRowField returns the RowField field.
func (b *BoardFields) GetRowField() *FieldReference {
	if b == nil {
		return nil
	}
	return b.RowField
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *BoardReference) GetID() string {
	if b == nil || b.ID == nil {
		return ""
	}
	return *b.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BoardReference) GetName() string {
	if b == nil || b.Name == nil {
		return ""
	}
	return *b.Name
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (b *BoardReference) GetURL() string {
	if b == nil || b.URL == nil {
		return ""
	}
	return *b.URL
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *BoardRow) GetID() string {
	if b == nil || b.ID == nil {
		return ""
	}
	return *b.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BoardRow) GetName() string {
	if b == nil || b.Name == nil {
		return ""
	}
	return *b.Name
}

// GetBranch returns the Branch field if it's non-nil, zero value otherwise.
func (b *Build) GetBranch() string {
	if b == nil || b.Branch == nil {
		return ""
	}
	return *b.Branch
}

// GetBuildNumber returns the BuildNumber field if it's non-nil, zero value otherwise.
func (b *Build) GetBuildNumber() string {
	if b == nil || b.BuildNumber == nil {
		return ""
	}
	return *b.BuildNumber
}

// GetController returns the Controller field.
func (b *Build) GetController() *BuildController {
	if b == nil {
		return nil
	}
	return b.Controller
}

// GetDefinition returns the Definition field.
func (b *Build) GetDefinition() *BuildDefinition {
	if b == nil {
		return nil
	}
	return b.Definition
}

// GetDeleted returns the Deleted field if it's non-nil, zero value otherwise.
func (b *Build) GetDeleted() bool {
	if b == nil || b.Deleted == nil {
		return false
	}
	return *b.Deleted
}

// GetDeletedBy returns the DeletedBy field.
func (b *Build) GetDeletedBy() *IdentityRef {
	if b == nil {
		return nil
	}
	return b.DeletedBy
}

// GetFinishTime returns the FinishTime field if it's non-nil, zero value otherwise.
func (b *Build) GetFinishTime() string {
	if b == nil || b.FinishTime == nil {
		return ""
	}
	return *b.FinishTime
}

// GetLastChangedBy returns the LastChangedBy field.
func (b *Build) GetLastChangedBy() *IdentityRef {
	if b == nil {
		return nil
	}
	return b.LastChangedBy
}

// GetOrchestrationPlan returns the OrchestrationPlan field.
func (b *Build) GetOrchestrationPlan() *buildOrchestrationPlanSchema {
	if b == nil {
		return nil
	}
	return b.OrchestrationPlan
}

// GetProject returns the Project field.
func (b *Build) GetProject() *TeamProjectReference {
	if b == nil {
		return nil
	}
	return b.Project
}

// GetQueuePosition returns the QueuePosition field if it's non-nil, zero value otherwise.
func (b *Build) GetQueuePosition() int {
	if b == nil || b.QueuePosition == nil {
		return 0
	}
	return *b.QueuePosition
}

// GetRepository returns the Repository field.
func (b *Build) GetRepository() *Repository {
	if b == nil {
		return nil
	}
	return b.Repository
}

// GetRetainedByRelease returns the RetainedByRelease field if it's non-nil, zero value otherwise.
func (b *Build) GetRetainedByRelease() bool {
	if b == nil || b.RetainedByRelease == nil {
		return false
	}
	return *b.RetainedByRelease
}

// GetTriggerBuild returns the TriggerBuild field.
func (b *Build) GetTriggerBuild() *Build {
	if b == nil {
		return nil
	}
	return b.TriggerBuild
}

// GetRepository returns the Repository field.
func (b *BuildDefinition) GetRepository() *Repository {
	if b == nil {
		return nil
	}
	return b.Repository
}

// GetAuthor returns the Author field.
func (c *Comment) GetAuthor() *IdentityRef {
	if c == nil {
		return nil
	}
	return c.Author
}

// GetCommentType returns the CommentType field if it's non-nil, zero value otherwise.
func (c *Comment) GetCommentType() int {
	if c == nil || c.CommentType == nil {
		return 0
	}
	return *c.CommentType
}

// GetContent returns the Content field if it's non-nil, zero value otherwise.
func (c *Comment) GetContent() string {
	if c == nil || c.Content == nil {
		return ""
	}
	return *c.Content
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (c *Comment) GetID() int {
	if c == nil || c.ID == nil {
		return 0
	}
	return *c.ID
}

// GetIsDeleted returns the IsDeleted field if it's non-nil, zero value otherwise.
func (c *Comment) GetIsDeleted() bool {
	if c == nil || c.IsDeleted == nil {
		return false
	}
	return *c.IsDeleted
}

// GetLastContentUpdatedDate returns the LastContentUpdatedDate field if it's non-nil, zero value otherwise.
func (c *Comment) GetLastContentUpdatedDate() time.Time {
	if c == nil || c.LastContentUpdatedDate == nil {
		return time.Time{}
	}
	return *c.LastContentUpdatedDate
}

// GetLastUpdatedDate returns the LastUpdatedDate field if it's non-nil, zero value otherwise.
func (c *Comment) GetLastUpdatedDate() time.Time {
	if c == nil || c.LastUpdatedDate == nil {
		return time.Time{}
	}
	return *c.LastUpdatedDate
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (c *Comment) GetLinks() []ReferenceLinks {
	if c == nil || c.Links == nil {
		return nil
	}
	return *c.Links
}

// GetParentCommentID returns the ParentCommentID field if it's non-nil, zero value otherwise.
func (c *Comment) GetParentCommentID() int {
	if c == nil || c.ParentCommentID == nil {
		return 0
	}
	return *c.ParentCommentID
}

// GetPublishedDate returns the PublishedDate field if it's non-nil, zero value otherwise.
func (c *Comment) GetPublishedDate() time.Time {
	if c == nil || c.PublishedDate == nil {
		return time.Time{}
	}
	return *c.PublishedDate
}

// GetUsersLiked returns the UsersLiked field if it's non-nil, zero value otherwise.
func (c *Comment) GetUsersLiked() []IdentityRef {
	if c == nil || c.UsersLiked == nil {
		return nil
	}
	return *c.UsersLiked
}

// GetLine returns the Line field if it's non-nil, zero value otherwise.
func (c *CommentPosition) GetLine() int {
	if c == nil || c.Line == nil {
		return 0
	}
	return *c.Line
}

// GetOffset returns the Offset field if it's non-nil, zero value otherwise.
func (c *CommentPosition) GetOffset() int {
	if c == nil || c.Offset == nil {
		return 0
	}
	return *c.Offset
}

// GetCommentID returns the CommentID field if it's non-nil, zero value otherwise.
func (c *CommentVersionRef) GetCommentID() int {
	if c == nil || c.CommentID == nil {
		return 0
	}
	return *c.CommentID
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (c *CommentVersionRef) GetURL() string {
	if c == nil || c.URL == nil {
		return ""
	}
	return *c.URL
}

// GetVersion returns the Version field if it's non-nil, zero value otherwise.
func (c *CommentVersionRef) GetVersion() int {
	if c == nil || c.Version == nil {
		return 0
	}
	return *c.Version
}

// GetCreated returns the Created field if it's non-nil, zero value otherwise.
func (d *DeliveryPlan) GetCreated() string {
	if d == nil || d.Created == nil {
		return ""
	}
	return *d.Created
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (d *DeliveryPlan) GetID() string {
	if d == nil || d.ID == nil {
		return ""
	}
	return *d.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DeliveryPlan) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetType returns the Type field if it's non-nil, zero value otherwise.
func (d *DeliveryPlan) GetType() string {
	if d == nil || d.Type == nil {
		return ""
	}
	return *d.Type
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (d *DeliveryPlan) GetURL() string {
	if d == nil || d.URL == nil {
		return ""
	}
	return *d.URL
}

// GetEndDate returns the EndDate field if it's non-nil, zero value otherwise.
func (d *DeliveryPlanTimeLine) GetEndDate() string {
	if d == nil || d.EndDate == nil {
		return ""
	}
	return *d.EndDate
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (d *DeliveryPlanTimeLine) GetID() string {
	if d == nil || d.ID == nil {
		return ""
	}
	return *d.ID
}

// GetRevision returns the Revision field if it's non-nil, zero value otherwise.
func (d *DeliveryPlanTimeLine) GetRevision() int {
	if d == nil || d.Revision == nil {
		return 0
	}
	return *d.Revision
}

// GetStartDate returns the StartDate field if it's non-nil, zero value otherwise.
func (d *DeliveryPlanTimeLine) GetStartDate() string {
	if d == nil || d.StartDate == nil {
		return ""
	}
	return *d.StartDate
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (d *DeliveryTeam) GetID() string {
	if d == nil || d.ID == nil {
		return ""
	}
	return *d.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DeliveryTeam) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetArtifactID returns the ArtifactID field if it's non-nil, zero value otherwise.
func (f *Favourite) GetArtifactID() string {
	if f == nil || f.ArtifactID == nil {
		return ""
	}
	return *f.ArtifactID
}

// GetArtifactName returns the ArtifactName field if it's non-nil, zero value otherwise.
func (f *Favourite) GetArtifactName() string {
	if f == nil || f.ArtifactName == nil {
		return ""
	}
	return *f.ArtifactName
}

// GetArtifactType returns the ArtifactType field if it's non-nil, zero value otherwise.
func (f *Favourite) GetArtifactType() string {
	if f == nil || f.ArtifactType == nil {
		return ""
	}
	return *f.ArtifactType
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (f *Favourite) GetID() string {
	if f == nil || f.ID == nil {
		return ""
	}
	return *f.ID
}

// GetReferenceName returns the ReferenceName field if it's non-nil, zero value otherwise.
func (f *FieldReference) GetReferenceName() string {
	if f == nil || f.ReferenceName == nil {
		return ""
	}
	return *f.ReferenceName
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (f *FieldReference) GetURL() string {
	if f == nil || f.URL == nil {
		return ""
	}
	return *f.URL
}

// GetContentType returns the ContentType field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetContentType() string {
	if f == nil || f.ContentType == nil {
		return ""
	}
	return *f.ContentType
}

// GetEncoding returns the Encoding field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetEncoding() int {
	if f == nil || f.Encoding == nil {
		return 0
	}
	return *f.Encoding
}

// GetExtension returns the Extension field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetExtension() string {
	if f == nil || f.Extension == nil {
		return ""
	}
	return *f.Extension
}

// GetFileName returns the FileName field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetFileName() string {
	if f == nil || f.FileName == nil {
		return ""
	}
	return *f.FileName
}

// GetIsBinary returns the IsBinary field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetIsBinary() bool {
	if f == nil || f.IsBinary == nil {
		return false
	}
	return *f.IsBinary
}

// GetIsImage returns the IsImage field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetIsImage() bool {
	if f == nil || f.IsImage == nil {
		return false
	}
	return *f.IsImage
}

// GetVSLink returns the VSLink field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetVSLink() string {
	if f == nil || f.VSLink == nil {
		return ""
	}
	return *f.VSLink
}

// GetChangeID returns the ChangeID field if it's non-nil, zero value otherwise.
func (g *GitChange) GetChangeID() int {
	if g == nil || g.ChangeID == nil {
		return 0
	}
	return *g.ChangeID
}

// GetChangeType returns the ChangeType field if it's non-nil, zero value otherwise.
func (g *GitChange) GetChangeType() string {
	if g == nil || g.ChangeType == nil {
		return ""
	}
	return *g.ChangeType
}

// GetItem returns the Item field.
func (g *GitChange) GetItem() *GitItem {
	if g == nil {
		return nil
	}
	return g.Item
}

// GetNewContent returns the NewContent field.
func (g *GitChange) GetNewContent() *ItemContent {
	if g == nil {
		return nil
	}
	return g.NewContent
}

// GetNewContentTemplate returns the NewContentTemplate field.
func (g *GitChange) GetNewContentTemplate() *GitTemplate {
	if g == nil {
		return nil
	}
	return g.NewContentTemplate
}

// GetOriginalPath returns the OriginalPath field if it's non-nil, zero value otherwise.
func (g *GitChange) GetOriginalPath() string {
	if g == nil || g.OriginalPath == nil {
		return ""
	}
	return *g.OriginalPath
}

// GetSourceServerItem returns the SourceServerItem field if it's non-nil, zero value otherwise.
func (g *GitChange) GetSourceServerItem() string {
	if g == nil || g.SourceServerItem == nil {
		return ""
	}
	return *g.SourceServerItem
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitChange) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetChangeCounts returns the ChangeCounts field.
func (g *GitCommitChanges) GetChangeCounts() *ChangeCountDictionary {
	if g == nil {
		return nil
	}
	return g.ChangeCounts
}

// GetChanges returns the Changes field if it's non-nil, zero value otherwise.
func (g *GitCommitChanges) GetChanges() []GitChange {
	if g == nil || g.Changes == nil {
		return nil
	}
	return *g.Changes
}

// GetAuthor returns the Author field.
func (g *GitCommitRef) GetAuthor() *GitUserDate {
	if g == nil {
		return nil
	}
	return g.Author
}

// GetChangeCounts returns the ChangeCounts field.
func (g *GitCommitRef) GetChangeCounts() *ChangeCountDictionary {
	if g == nil {
		return nil
	}
	return g.ChangeCounts
}

// GetChanges returns the Changes field.
func (g *GitCommitRef) GetChanges() *GitChange {
	if g == nil {
		return nil
	}
	return g.Changes
}

// GetComment returns the Comment field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetComment() string {
	if g == nil || g.Comment == nil {
		return ""
	}
	return *g.Comment
}

// GetCommentTruncated returns the CommentTruncated field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetCommentTruncated() bool {
	if g == nil || g.CommentTruncated == nil {
		return false
	}
	return *g.CommentTruncated
}

// GetCommitID returns the CommitID field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetCommitID() string {
	if g == nil || g.CommitID == nil {
		return ""
	}
	return *g.CommitID
}

// GetCommitter returns the Committer field.
func (g *GitCommitRef) GetCommitter() *GitUserDate {
	if g == nil {
		return nil
	}
	return g.Committer
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetLinks() []ReferenceLinks {
	if g == nil || g.Links == nil {
		return nil
	}
	return *g.Links
}

// GetParents returns the Parents field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetParents() []string {
	if g == nil || g.Parents == nil {
		return nil
	}
	return *g.Parents
}

// GetPush returns the Push field.
func (g *GitCommitRef) GetPush() *GitPushRef {
	if g == nil {
		return nil
	}
	return g.Push
}

// GetRemoteURL returns the RemoteURL field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetRemoteURL() string {
	if g == nil || g.RemoteURL == nil {
		return ""
	}
	return *g.RemoteURL
}

// GetStatuses returns the Statuses field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetStatuses() []GitStatus {
	if g == nil || g.Statuses == nil {
		return nil
	}
	return *g.Statuses
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetWorkItems returns the WorkItems field.
func (g *GitCommitRef) GetWorkItems() *ResourceRef {
	if g == nil {
		return nil
	}
	return g.WorkItems
}

// GetCommitID returns the CommitID field if it's non-nil, zero value otherwise.
func (g *GitItem) GetCommitID() string {
	if g == nil || g.CommitID == nil {
		return ""
	}
	return *g.CommitID
}

// GetContent returns the Content field if it's non-nil, zero value otherwise.
func (g *GitItem) GetContent() string {
	if g == nil || g.Content == nil {
		return ""
	}
	return *g.Content
}

// GetContentMetadata returns the ContentMetadata field.
func (g *GitItem) GetContentMetadata() *FileContentMetadata {
	if g == nil {
		return nil
	}
	return g.ContentMetadata
}

// GetGitObjectType returns the GitObjectType field if it's non-nil, zero value otherwise.
func (g *GitItem) GetGitObjectType() string {
	if g == nil || g.GitObjectType == nil {
		return ""
	}
	return *g.GitObjectType
}

// GetIsFolder returns the IsFolder field if it's non-nil, zero value otherwise.
func (g *GitItem) GetIsFolder() bool {
	if g == nil || g.IsFolder == nil {
		return false
	}
	return *g.IsFolder
}

// GetIsSymLink returns the IsSymLink field if it's non-nil, zero value otherwise.
func (g *GitItem) GetIsSymLink() bool {
	if g == nil || g.IsSymLink == nil {
		return false
	}
	return *g.IsSymLink
}

// GetLatestProcessedChange returns the LatestProcessedChange field.
func (g *GitItem) GetLatestProcessedChange() *GitCommitRef {
	if g == nil {
		return nil
	}
	return g.LatestProcessedChange
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitItem) GetLinks() []ReferenceLinks {
	if g == nil || g.Links == nil {
		return nil
	}
	return *g.Links
}

// GetObjectID returns the ObjectID field if it's non-nil, zero value otherwise.
func (g *GitItem) GetObjectID() string {
	if g == nil || g.ObjectID == nil {
		return ""
	}
	return *g.ObjectID
}

// GetOriginalObjectID returns the OriginalObjectID field if it's non-nil, zero value otherwise.
func (g *GitItem) GetOriginalObjectID() string {
	if g == nil || g.OriginalObjectID == nil {
		return ""
	}
	return *g.OriginalObjectID
}

// GetPath returns the Path field if it's non-nil, zero value otherwise.
func (g *GitItem) GetPath() string {
	if g == nil || g.Path == nil {
		return ""
	}
	return *g.Path
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitItem) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetArtifactID returns the ArtifactID field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetArtifactID() string {
	if g == nil || g.ArtifactID == nil {
		return ""
	}
	return *g.ArtifactID
}

// GetAutoCompleteSetBy returns the AutoCompleteSetBy field.
func (g *GitPullRequest) GetAutoCompleteSetBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.AutoCompleteSetBy
}

// GetClosedBy returns the ClosedBy field.
func (g *GitPullRequest) GetClosedBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.ClosedBy
}

// GetClosedDate returns the ClosedDate field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetClosedDate() time.Time {
	if g == nil || g.ClosedDate == nil {
		return time.Time{}
	}
	return *g.ClosedDate
}

// GetCodeReviewID returns the CodeReviewID field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetCodeReviewID() int {
	if g == nil || g.CodeReviewID == nil {
		return 0
	}
	return *g.CodeReviewID
}

// GetCommits returns the Commits field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetCommits() []GitCommitRef {
	if g == nil || g.Commits == nil {
		return nil
	}
	return *g.Commits
}

// GetCompletionOptions returns the CompletionOptions field.
func (g *GitPullRequest) GetCompletionOptions() *GitPullRequestCompletionOptions {
	if g == nil {
		return nil
	}
	return g.CompletionOptions
}

// GetCompletionQueueTime returns the CompletionQueueTime field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetCompletionQueueTime() time.Time {
	if g == nil || g.CompletionQueueTime == nil {
		return time.Time{}
	}
	return *g.CompletionQueueTime
}

// GetCreatedBy returns the CreatedBy field.
func (g *GitPullRequest) GetCreatedBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.CreatedBy
}

// GetCreationDate returns the CreationDate field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetCreationDate() time.Time {
	if g == nil || g.CreationDate == nil {
		return time.Time{}
	}
	return *g.CreationDate
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetDescription() string {
	if g == nil || g.Description == nil {
		return ""
	}
	return *g.Description
}

// GetForkSource returns the ForkSource field.
func (g *GitPullRequest) GetForkSource() *GitRef {
	if g == nil {
		return nil
	}
	return g.ForkSource
}

// GetIsDraft returns the IsDraft field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetIsDraft() bool {
	if g == nil || g.IsDraft == nil {
		return false
	}
	return *g.IsDraft
}

// GetLabels returns the Labels field.
func (g *GitPullRequest) GetLabels() *WebAPITagDefinition {
	if g == nil {
		return nil
	}
	return g.Labels
}

// GetLastMergeCommit returns the LastMergeCommit field.
func (g *GitPullRequest) GetLastMergeCommit() *GitCommitRef {
	if g == nil {
		return nil
	}
	return g.LastMergeCommit
}

// GetLastMergeSourceCommit returns the LastMergeSourceCommit field.
func (g *GitPullRequest) GetLastMergeSourceCommit() *GitCommitRef {
	if g == nil {
		return nil
	}
	return g.LastMergeSourceCommit
}

// GetLastMergeTargetCommit returns the LastMergeTargetCommit field.
func (g *GitPullRequest) GetLastMergeTargetCommit() *GitCommitRef {
	if g == nil {
		return nil
	}
	return g.LastMergeTargetCommit
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetLinks() []ReferenceLinks {
	if g == nil || g.Links == nil {
		return nil
	}
	return *g.Links
}

// GetMergeFailureMessage returns the MergeFailureMessage field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetMergeFailureMessage() string {
	if g == nil || g.MergeFailureMessage == nil {
		return ""
	}
	return *g.MergeFailureMessage
}

// GetMergeFailureType returns the MergeFailureType field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetMergeFailureType() string {
	if g == nil || g.MergeFailureType == nil {
		return ""
	}
	return *g.MergeFailureType
}

// GetMergeID returns the MergeID field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetMergeID() string {
	if g == nil || g.MergeID == nil {
		return ""
	}
	return *g.MergeID
}

// GetMergeOptions returns the MergeOptions field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetMergeOptions() string {
	if g == nil || g.MergeOptions == nil {
		return ""
	}
	return *g.MergeOptions
}

// GetMergeStatus returns the MergeStatus field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetMergeStatus() string {
	if g == nil || g.MergeStatus == nil {
		return ""
	}
	return *g.MergeStatus
}

// GetPullRequestID returns the PullRequestID field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetPullRequestID() int {
	if g == nil || g.PullRequestID == nil {
		return 0
	}
	return *g.PullRequestID
}

// GetRemoteURL returns the RemoteURL field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetRemoteURL() string {
	if g == nil || g.RemoteURL == nil {
		return ""
	}
	return *g.RemoteURL
}

// GetRepository returns the Repository field.
func (g *GitPullRequest) GetRepository() *GitRepository {
	if g == nil {
		return nil
	}
	return g.Repository
}

// GetReviewers returns the Reviewers field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetReviewers() []IdentityRefWithVote {
	if g == nil || g.Reviewers == nil {
		return nil
	}
	return *g.Reviewers
}

// GetSourceRefName returns the SourceRefName field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetSourceRefName() string {
	if g == nil || g.SourceRefName == nil {
		return ""
	}
	return *g.SourceRefName
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetStatus() string {
	if g == nil || g.Status == nil {
		return ""
	}
	return *g.Status
}

// GetSupportsIterations returns the SupportsIterations field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetSupportsIterations() bool {
	if g == nil || g.SupportsIterations == nil {
		return false
	}
	return *g.SupportsIterations
}

// GetTargetRefName returns the TargetRefName field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetTargetRefName() string {
	if g == nil || g.TargetRefName == nil {
		return ""
	}
	return *g.TargetRefName
}

// GetTitle returns the Title field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetTitle() string {
	if g == nil || g.Title == nil {
		return ""
	}
	return *g.Title
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetWorkItemRefs returns the WorkItemRefs field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetWorkItemRefs() []ResourceRef {
	if g == nil || g.WorkItemRefs == nil {
		return nil
	}
	return *g.WorkItemRefs
}

// GetComments returns the Comments field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetComments() []Comment {
	if g == nil || g.Comments == nil {
		return nil
	}
	return *g.Comments
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetID() int {
	if g == nil || g.ID == nil {
		return 0
	}
	return *g.ID
}

// GetIdentities returns the Identities field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetIdentities() []IdentityRef {
	if g == nil || g.Identities == nil {
		return nil
	}
	return *g.Identities
}

// GetIsDeleted returns the IsDeleted field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetIsDeleted() bool {
	if g == nil || g.IsDeleted == nil {
		return false
	}
	return *g.IsDeleted
}

// GetLastUpdatedDate returns the LastUpdatedDate field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetLastUpdatedDate() time.Time {
	if g == nil || g.LastUpdatedDate == nil {
		return time.Time{}
	}
	return *g.LastUpdatedDate
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetLinks() []ReferenceLinks {
	if g == nil || g.Links == nil {
		return nil
	}
	return *g.Links
}

// GetProperties returns the Properties field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetProperties() []int {
	if g == nil || g.Properties == nil {
		return nil
	}
	return *g.Properties
}

// GetPublishedDate returns the PublishedDate field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetPublishedDate() time.Time {
	if g == nil || g.PublishedDate == nil {
		return time.Time{}
	}
	return *g.PublishedDate
}

// GetPullRequestThreadContext returns the PullRequestThreadContext field.
func (g *GitPullRequestCommentThread) GetPullRequestThreadContext() *GitPullRequestCommentThreadContext {
	if g == nil {
		return nil
	}
	return g.PullRequestThreadContext
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetStatus() string {
	if g == nil || g.Status == nil {
		return ""
	}
	return *g.Status
}

// GetFilePath returns the FilePath field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThreadContext) GetFilePath() string {
	if g == nil || g.FilePath == nil {
		return ""
	}
	return *g.FilePath
}

// GetLeftFileEnd returns the LeftFileEnd field.
func (g *GitPullRequestCommentThreadContext) GetLeftFileEnd() *CommentPosition {
	if g == nil {
		return nil
	}
	return g.LeftFileEnd
}

// GetLeftFileStart returns the LeftFileStart field.
func (g *GitPullRequestCommentThreadContext) GetLeftFileStart() *CommentPosition {
	if g == nil {
		return nil
	}
	return g.LeftFileStart
}

// GetRightFileEnd returns the RightFileEnd field.
func (g *GitPullRequestCommentThreadContext) GetRightFileEnd() *CommentPosition {
	if g == nil {
		return nil
	}
	return g.RightFileEnd
}

// GetRightFileStart returns the RightFileStart field.
func (g *GitPullRequestCommentThreadContext) GetRightFileStart() *CommentPosition {
	if g == nil {
		return nil
	}
	return g.RightFileStart
}

// GetBypassPolicy returns the BypassPolicy field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetBypassPolicy() bool {
	if g == nil || g.BypassPolicy == nil {
		return false
	}
	return *g.BypassPolicy
}

// GetBypassReason returns the BypassReason field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetBypassReason() string {
	if g == nil || g.BypassReason == nil {
		return ""
	}
	return *g.BypassReason
}

// GetDeleteSourceBranch returns the DeleteSourceBranch field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetDeleteSourceBranch() bool {
	if g == nil || g.DeleteSourceBranch == nil {
		return false
	}
	return *g.DeleteSourceBranch
}

// GetMergeCommitMessage returns the MergeCommitMessage field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetMergeCommitMessage() string {
	if g == nil || g.MergeCommitMessage == nil {
		return ""
	}
	return *g.MergeCommitMessage
}

// GetMergeStrategy returns the MergeStrategy field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetMergeStrategy() string {
	if g == nil || g.MergeStrategy == nil {
		return ""
	}
	return *g.MergeStrategy
}

// GetSquashMerge returns the SquashMerge field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetSquashMerge() bool {
	if g == nil || g.SquashMerge == nil {
		return false
	}
	return *g.SquashMerge
}

// GetTransitionWorkItems returns the TransitionWorkItems field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetTransitionWorkItems() bool {
	if g == nil || g.TransitionWorkItems == nil {
		return false
	}
	return *g.TransitionWorkItems
}

// GetTriggeredByAutoComplete returns the TriggeredByAutoComplete field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetTriggeredByAutoComplete() bool {
	if g == nil || g.TriggeredByAutoComplete == nil {
		return false
	}
	return *g.TriggeredByAutoComplete
}

// GetDetectRenameFalsePositives returns the DetectRenameFalsePositives field if it's non-nil, zero value otherwise.
func (g *GitPullRequestMergeOptions) GetDetectRenameFalsePositives() bool {
	if g == nil || g.DetectRenameFalsePositives == nil {
		return false
	}
	return *g.DetectRenameFalsePositives
}

// GetDisableRenames returns the DisableRenames field if it's non-nil, zero value otherwise.
func (g *GitPullRequestMergeOptions) GetDisableRenames() bool {
	if g == nil || g.DisableRenames == nil {
		return false
	}
	return *g.DisableRenames
}

// GetProperties returns the Properties field if it's non-nil, zero value otherwise.
func (g *GitPullRequestStatus) GetProperties() time.Time {
	if g == nil || g.Properties == nil {
		return time.Time{}
	}
	return *g.Properties
}

// GetCommits returns the Commits field if it's non-nil, zero value otherwise.
func (g *GitPush) GetCommits() []GitCommitRef {
	if g == nil || g.Commits == nil {
		return nil
	}
	return *g.Commits
}

// GetDate returns the Date field if it's non-nil, zero value otherwise.
func (g *GitPush) GetDate() time.Time {
	if g == nil || g.Date == nil {
		return time.Time{}
	}
	return *g.Date
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitPush) GetLinks() []ReferenceLinks {
	if g == nil || g.Links == nil {
		return nil
	}
	return *g.Links
}

// GetPushedBy returns the PushedBy field.
func (g *GitPush) GetPushedBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.PushedBy
}

// GetPushID returns the PushID field if it's non-nil, zero value otherwise.
func (g *GitPush) GetPushID() int {
	if g == nil || g.PushID == nil {
		return 0
	}
	return *g.PushID
}

// GetRefUpdates returns the RefUpdates field if it's non-nil, zero value otherwise.
func (g *GitPush) GetRefUpdates() []GitRefUpdate {
	if g == nil || g.RefUpdates == nil {
		return nil
	}
	return *g.RefUpdates
}

// GetRepository returns the Repository field.
func (g *GitPush) GetRepository() *GitRepository {
	if g == nil {
		return nil
	}
	return g.Repository
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitPush) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetCommits returns the Commits field if it's non-nil, zero value otherwise.
func (g *GitPushRef) GetCommits() []GitCommitRef {
	if g == nil || g.Commits == nil {
		return nil
	}
	return *g.Commits
}

// GetRefUpdates returns the RefUpdates field if it's non-nil, zero value otherwise.
func (g *GitPushRef) GetRefUpdates() []GitRefUpdate {
	if g == nil || g.RefUpdates == nil {
		return nil
	}
	return *g.RefUpdates
}

// GetRepository returns the Repository field.
func (g *GitPushRef) GetRepository() *GitRepository {
	if g == nil {
		return nil
	}
	return g.Repository
}

// GetCreator returns the Creator field.
func (g *GitRef) GetCreator() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.Creator
}

// GetIsLocked returns the IsLocked field if it's non-nil, zero value otherwise.
func (g *GitRef) GetIsLocked() bool {
	if g == nil || g.IsLocked == nil {
		return false
	}
	return *g.IsLocked
}

// GetIsLockedBy returns the IsLockedBy field.
func (g *GitRef) GetIsLockedBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.IsLockedBy
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitRef) GetLinks() []ReferenceLinks {
	if g == nil || g.Links == nil {
		return nil
	}
	return *g.Links
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitRef) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetObjectID returns the ObjectID field if it's non-nil, zero value otherwise.
func (g *GitRef) GetObjectID() string {
	if g == nil || g.ObjectID == nil {
		return ""
	}
	return *g.ObjectID
}

// GetPeeledObjectID returns the PeeledObjectID field if it's non-nil, zero value otherwise.
func (g *GitRef) GetPeeledObjectID() string {
	if g == nil || g.PeeledObjectID == nil {
		return ""
	}
	return *g.PeeledObjectID
}

// GetRepository returns the Repository field.
func (g *GitRef) GetRepository() *GitRepository {
	if g == nil {
		return nil
	}
	return g.Repository
}

// GetStatuses returns the Statuses field if it's non-nil, zero value otherwise.
func (g *GitRef) GetStatuses() []GitStatus {
	if g == nil || g.Statuses == nil {
		return nil
	}
	return *g.Statuses
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitRef) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetIsLocked returns the IsLocked field if it's non-nil, zero value otherwise.
func (g *GitRefUpdate) GetIsLocked() bool {
	if g == nil || g.IsLocked == nil {
		return false
	}
	return *g.IsLocked
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitRefUpdate) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetNewObjectID returns the NewObjectID field if it's non-nil, zero value otherwise.
func (g *GitRefUpdate) GetNewObjectID() string {
	if g == nil || g.NewObjectID == nil {
		return ""
	}
	return *g.NewObjectID
}

// GetOldObjectID returns the OldObjectID field if it's non-nil, zero value otherwise.
func (g *GitRefUpdate) GetOldObjectID() string {
	if g == nil || g.OldObjectID == nil {
		return ""
	}
	return *g.OldObjectID
}

// GetRepositoryID returns the RepositoryID field if it's non-nil, zero value otherwise.
func (g *GitRefUpdate) GetRepositoryID() string {
	if g == nil || g.RepositoryID == nil {
		return ""
	}
	return *g.RepositoryID
}

// GetDefaultBranch returns the DefaultBranch field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetDefaultBranch() string {
	if g == nil || g.DefaultBranch == nil {
		return ""
	}
	return *g.DefaultBranch
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetID() string {
	if g == nil || g.ID == nil {
		return ""
	}
	return *g.ID
}

// GetIsFork returns the IsFork field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetIsFork() bool {
	if g == nil || g.IsFork == nil {
		return false
	}
	return *g.IsFork
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetLinks() []ReferenceLinks {
	if g == nil || g.Links == nil {
		return nil
	}
	return *g.Links
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetParentRepository returns the ParentRepository field.
func (g *GitRepository) GetParentRepository() *GitRepositoryRef {
	if g == nil {
		return nil
	}
	return g.ParentRepository
}

// GetProject returns the Project field.
func (g *GitRepository) GetProject() *TeamProjectReference {
	if g == nil {
		return nil
	}
	return g.Project
}

// GetRemoteURL returns the RemoteURL field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetRemoteURL() string {
	if g == nil || g.RemoteURL == nil {
		return ""
	}
	return *g.RemoteURL
}

// GetSize returns the Size field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetSize() int {
	if g == nil || g.Size == nil {
		return 0
	}
	return *g.Size
}

// GetSSHURL returns the SSHURL field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetSSHURL() string {
	if g == nil || g.SSHURL == nil {
		return ""
	}
	return *g.SSHURL
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetValidRemoteURLs returns the ValidRemoteURLs field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetValidRemoteURLs() []string {
	if g == nil || g.ValidRemoteURLs == nil {
		return nil
	}
	return *g.ValidRemoteURLs
}

// GetCollection returns the Collection field.
func (g *GitRepositoryRef) GetCollection() *TeamProjectCollectionReference {
	if g == nil {
		return nil
	}
	return g.Collection
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetID() string {
	if g == nil || g.ID == nil {
		return ""
	}
	return *g.ID
}

// GetIsFork returns the IsFork field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetIsFork() bool {
	if g == nil || g.IsFork == nil {
		return false
	}
	return *g.IsFork
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetProject returns the Project field.
func (g *GitRepositoryRef) GetProject() *TeamProjectReference {
	if g == nil {
		return nil
	}
	return g.Project
}

// GetRemoteURL returns the RemoteURL field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetRemoteURL() string {
	if g == nil || g.RemoteURL == nil {
		return ""
	}
	return *g.RemoteURL
}

// GetSSHURL returns the SSHURL field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetSSHURL() string {
	if g == nil || g.SSHURL == nil {
		return ""
	}
	return *g.SSHURL
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetContext returns the Context field.
func (g *GitStatus) GetContext() *GitStatusContext {
	if g == nil {
		return nil
	}
	return g.Context
}

// GetCreatedBy returns the CreatedBy field.
func (g *GitStatus) GetCreatedBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.CreatedBy
}

// GetCreationDate returns the CreationDate field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetCreationDate() time.Time {
	if g == nil || g.CreationDate == nil {
		return time.Time{}
	}
	return *g.CreationDate
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetDescription() string {
	if g == nil || g.Description == nil {
		return ""
	}
	return *g.Description
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetID() int {
	if g == nil || g.ID == nil {
		return 0
	}
	return *g.ID
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetLinks() []ReferenceLinks {
	if g == nil || g.Links == nil {
		return nil
	}
	return *g.Links
}

// GetState returns the State field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetState() string {
	if g == nil || g.State == nil {
		return ""
	}
	return *g.State
}

// GetTargetURL returns the TargetURL field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetTargetURL() string {
	if g == nil || g.TargetURL == nil {
		return ""
	}
	return *g.TargetURL
}

// GetUpdatedDate returns the UpdatedDate field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetUpdatedDate() time.Time {
	if g == nil || g.UpdatedDate == nil {
		return time.Time{}
	}
	return *g.UpdatedDate
}

// GetGenre returns the Genre field if it's non-nil, zero value otherwise.
func (g *GitStatusContext) GetGenre() string {
	if g == nil || g.Genre == nil {
		return ""
	}
	return *g.Genre
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitStatusContext) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitTemplate) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetType returns the Type field if it's non-nil, zero value otherwise.
func (g *GitTemplate) GetType() string {
	if g == nil || g.Type == nil {
		return ""
	}
	return *g.Type
}

// GetDate returns the Date field if it's non-nil, zero value otherwise.
func (g *GitUserDate) GetDate() time.Time {
	if g == nil || g.Date == nil {
		return time.Time{}
	}
	return *g.Date
}

// GetEmail returns the Email field if it's non-nil, zero value otherwise.
func (g *GitUserDate) GetEmail() string {
	if g == nil || g.Email == nil {
		return ""
	}
	return *g.Email
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitUserDate) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetDescriptor returns the Descriptor field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetDescriptor() string {
	if i == nil || i.Descriptor == nil {
		return ""
	}
	return *i.Descriptor
}

// GetDirectoryAlias returns the DirectoryAlias field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetDirectoryAlias() string {
	if i == nil || i.DirectoryAlias == nil {
		return ""
	}
	return *i.DirectoryAlias
}

// GetDisplayName returns the DisplayName field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetDisplayName() string {
	if i == nil || i.DisplayName == nil {
		return ""
	}
	return *i.DisplayName
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetID() string {
	if i == nil || i.ID == nil {
		return ""
	}
	return *i.ID
}

// GetImageURL returns the ImageURL field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetImageURL() string {
	if i == nil || i.ImageURL == nil {
		return ""
	}
	return *i.ImageURL
}

// GetInactive returns the Inactive field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetInactive() bool {
	if i == nil || i.Inactive == nil {
		return false
	}
	return *i.Inactive
}

// GetIsAadIdentity returns the IsAadIdentity field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetIsAadIdentity() bool {
	if i == nil || i.IsAadIdentity == nil {
		return false
	}
	return *i.IsAadIdentity
}

// GetIsContainer returns the IsContainer field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetIsContainer() bool {
	if i == nil || i.IsContainer == nil {
		return false
	}
	return *i.IsContainer
}

// GetIsDeletedInOrigin returns the IsDeletedInOrigin field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetIsDeletedInOrigin() bool {
	if i == nil || i.IsDeletedInOrigin == nil {
		return false
	}
	return *i.IsDeletedInOrigin
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetLinks() []ReferenceLinks {
	if i == nil || i.Links == nil {
		return nil
	}
	return *i.Links
}

// GetProfileURL returns the ProfileURL field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetProfileURL() string {
	if i == nil || i.ProfileURL == nil {
		return ""
	}
	return *i.ProfileURL
}

// GetUniqueName returns the UniqueName field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetUniqueName() string {
	if i == nil || i.UniqueName == nil {
		return ""
	}
	return *i.UniqueName
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetURL() string {
	if i == nil || i.URL == nil {
		return ""
	}
	return *i.URL
}

// GetIsRequired returns the IsRequired field if it's non-nil, zero value otherwise.
func (i *IdentityRefWithVote) GetIsRequired() bool {
	if i == nil || i.IsRequired == nil {
		return false
	}
	return *i.IsRequired
}

// GetReviewerURL returns the ReviewerURL field if it's non-nil, zero value otherwise.
func (i *IdentityRefWithVote) GetReviewerURL() string {
	if i == nil || i.ReviewerURL == nil {
		return ""
	}
	return *i.ReviewerURL
}

// GetVote returns the Vote field if it's non-nil, zero value otherwise.
func (i *IdentityRefWithVote) GetVote() int {
	if i == nil || i.Vote == nil {
		return 0
	}
	return *i.Vote
}

// GetVotedFor returns the VotedFor field if it's non-nil, zero value otherwise.
func (i *IdentityRefWithVote) GetVotedFor() []IdentityRefWithVote {
	if i == nil || i.VotedFor == nil {
		return nil
	}
	return *i.VotedFor
}

// GetContent returns the Content field if it's non-nil, zero value otherwise.
func (i *ItemContent) GetContent() string {
	if i == nil || i.Content == nil {
		return ""
	}
	return *i.Content
}

// GetContentType returns the ContentType field.
func (i *ItemContent) GetContentType() *ItemContentType {
	if i == nil {
		return nil
	}
	return i.ContentType
}

// GetBase64Encoded returns the Base64Encoded field if it's non-nil, zero value otherwise.
func (i *ItemContentType) GetBase64Encoded() string {
	if i == nil || i.Base64Encoded == nil {
		return ""
	}
	return *i.Base64Encoded
}

// GetRawText returns the RawText field if it's non-nil, zero value otherwise.
func (i *ItemContentType) GetRawText() string {
	if i == nil || i.RawText == nil {
		return ""
	}
	return *i.RawText
}

// GetLinks returns the Links field.
func (i *IterationWorkItems) GetLinks() *ReferenceLinks {
	if i == nil {
		return nil
	}
	return i.Links
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (i *IterationWorkItems) GetURL() string {
	if i == nil || i.URL == nil {
		return ""
	}
	return *i.URL
}

// GetHref returns the Href field if it's non-nil, zero value otherwise.
func (l *Link) GetHref() string {
	if l == nil || l.Href == nil {
		return ""
	}
	return *l.Href
}

// GetCount returns the Count field if it's non-nil, zero value otherwise.
func (l *ListBoardsResponse) GetCount() int {
	if l == nil || l.Count == nil {
		return 0
	}
	return *l.Count
}

// GetHTML returns the HTML field if it's non-nil, zero value otherwise.
func (m *Message) GetHTML() string {
	if m == nil || m.HTML == nil {
		return ""
	}
	return *m.HTML
}

// GetMarkdown returns the Markdown field if it's non-nil, zero value otherwise.
func (m *Message) GetMarkdown() string {
	if m == nil || m.Markdown == nil {
		return ""
	}
	return *m.Markdown
}

// GetText returns the Text field if it's non-nil, zero value otherwise.
func (m *Message) GetText() string {
	if m == nil || m.Text == nil {
		return ""
	}
	return *m.Text
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (p *Project) GetDescription() string {
	if p == nil || p.Description == nil {
		return ""
	}
	return *p.Description
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (p *Project) GetID() string {
	if p == nil || p.ID == nil {
		return ""
	}
	return *p.ID
}

// GetLastUpdateTime returns the LastUpdateTime field if it's non-nil, zero value otherwise.
func (p *Project) GetLastUpdateTime() time.Time {
	if p == nil || p.LastUpdateTime == nil {
		return time.Time{}
	}
	return *p.LastUpdateTime
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (p *Project) GetName() string {
	if p == nil || p.Name == nil {
		return ""
	}
	return *p.Name
}

// GetRevision returns the Revision field if it's non-nil, zero value otherwise.
func (p *Project) GetRevision() int {
	if p == nil || p.Revision == nil {
		return 0
	}
	return *p.Revision
}

// GetState returns the State field if it's non-nil, zero value otherwise.
func (p *Project) GetState() string {
	if p == nil || p.State == nil {
		return ""
	}
	return *p.State
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (p *Project) GetURL() string {
	if p == nil || p.URL == nil {
		return ""
	}
	return *p.URL
}

// GetVisibility returns the Visibility field if it's non-nil, zero value otherwise.
func (p *Project) GetVisibility() string {
	if p == nil || p.Visibility == nil {
		return ""
	}
	return *p.Visibility
}

// GetAccount returns the Account field.
func (r *ResourceContainers) GetAccount() *ResourceRef {
	if r == nil {
		return nil
	}
	return r.Account
}

// GetCollection returns the Collection field.
func (r *ResourceContainers) GetCollection() *ResourceRef {
	if r == nil {
		return nil
	}
	return r.Collection
}

// GetProject returns the Project field.
func (r *ResourceContainers) GetProject() *ResourceRef {
	if r == nil {
		return nil
	}
	return r.Project
}

// GetBaseURL returns the BaseURL field if it's non-nil, zero value otherwise.
func (r *ResourceRef) GetBaseURL() string {
	if r == nil || r.BaseURL == nil {
		return ""
	}
	return *r.BaseURL
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (r *ResourceRef) GetID() string {
	if r == nil || r.ID == nil {
		return ""
	}
	return *r.ID
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (r *ResourceRef) GetURL() string {
	if r == nil || r.URL == nil {
		return ""
	}
	return *r.URL
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (t *TeamProjectCollectionReference) GetID() string {
	if t == nil || t.ID == nil {
		return ""
	}
	return *t.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (t *TeamProjectCollectionReference) GetName() string {
	if t == nil || t.Name == nil {
		return ""
	}
	return *t.Name
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (t *TeamProjectCollectionReference) GetURL() string {
	if t == nil || t.URL == nil {
		return ""
	}
	return *t.URL
}

// GetAbbreviation returns the Abbreviation field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetAbbreviation() string {
	if t == nil || t.Abbreviation == nil {
		return ""
	}
	return *t.Abbreviation
}

// GetDefaultTeamImageURL returns the DefaultTeamImageURL field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetDefaultTeamImageURL() string {
	if t == nil || t.DefaultTeamImageURL == nil {
		return ""
	}
	return *t.DefaultTeamImageURL
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetDescription() string {
	if t == nil || t.Description == nil {
		return ""
	}
	return *t.Description
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetID() string {
	if t == nil || t.ID == nil {
		return ""
	}
	return *t.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetName() string {
	if t == nil || t.Name == nil {
		return ""
	}
	return *t.Name
}

// GetRevision returns the Revision field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetRevision() string {
	if t == nil || t.Revision == nil {
		return ""
	}
	return *t.Revision
}

// GetState returns the State field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetState() string {
	if t == nil || t.State == nil {
		return ""
	}
	return *t.State
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetURL() string {
	if t == nil || t.URL == nil {
		return ""
	}
	return *t.URL
}

// GetVisibility returns the Visibility field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetVisibility() string {
	if t == nil || t.Visibility == nil {
		return ""
	}
	return *t.Visibility
}

// GetActive returns the Active field if it's non-nil, zero value otherwise.
func (w *WebAPITagDefinition) GetActive() bool {
	if w == nil || w.Active == nil {
		return false
	}
	return *w.Active
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (w *WebAPITagDefinition) GetID() string {
	if w == nil || w.ID == nil {
		return ""
	}
	return *w.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (w *WebAPITagDefinition) GetName() string {
	if w == nil || w.Name == nil {
		return ""
	}
	return *w.Name
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WebAPITagDefinition) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetCommentVersionRef returns the CommentVersionRef field.
func (w *WorkItem) GetCommentVersionRef() *CommentVersionRef {
	if w == nil {
		return nil
	}
	return w.CommentVersionRef
}

// GetFields returns the Fields field if it's non-nil, zero value otherwise.
func (w *WorkItem) GetFields() map[string]string {
	if w == nil || w.Fields == nil {
		return map[string]string{}
	}
	return *w.Fields
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (w *WorkItem) GetID() int {
	if w == nil || w.ID == nil {
		return 0
	}
	return *w.ID
}

// GetLinks returns the Links field.
func (w *WorkItem) GetLinks() *ReferenceLinks {
	if w == nil {
		return nil
	}
	return w.Links
}

// GetRev returns the Rev field if it's non-nil, zero value otherwise.
func (w *WorkItem) GetRev() int {
	if w == nil || w.Rev == nil {
		return 0
	}
	return *w.Rev
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WorkItem) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetRel returns the Rel field if it's non-nil, zero value otherwise.
func (w *WorkItemLink) GetRel() string {
	if w == nil || w.Rel == nil {
		return ""
	}
	return *w.Rel
}

// GetSource returns the Source field.
func (w *WorkItemLink) GetSource() *WorkItemReference {
	if w == nil {
		return nil
	}
	return w.Source
}

// GetTarget returns the Target field.
func (w *WorkItemLink) GetTarget() *WorkItemReference {
	if w == nil {
		return nil
	}
	return w.Target
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (w *WorkItemReference) GetID() int {
	if w == nil || w.ID == nil {
		return 0
	}
	return *w.ID
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WorkItemReference) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetAttributes returns the Attributes field.
func (w *WorkItemRelation) GetAttributes() *ReferenceLinks {
	if w == nil {
		return nil
	}
	return w.Attributes
}

// GetRel returns the Rel field if it's non-nil, zero value otherwise.
func (w *WorkItemRelation) GetRel() string {
	if w == nil || w.Rel == nil {
		return ""
	}
	return *w.Rel
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WorkItemRelation) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetAdded returns the Added field.
func (w *WorkItemRelationUpdates) GetAdded() *WorkItemRelation {
	if w == nil {
		return nil
	}
	return w.Added
}

// GetRemoved returns the Removed field.
func (w *WorkItemRelationUpdates) GetRemoved() *WorkItemRelation {
	if w == nil {
		return nil
	}
	return w.Removed
}

// GetUpdated returns the Updated field.
func (w *WorkItemRelationUpdates) GetUpdated() *WorkItemRelation {
	if w == nil {
		return nil
	}
	return w.Updated
}

// GetFields returns the Fields field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetFields() map[string]WorkItemFieldUpdate {
	if w == nil || w.Fields == nil {
		return map[string]WorkItemFieldUpdate{}
	}
	return *w.Fields
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetID() int {
	if w == nil || w.ID == nil {
		return 0
	}
	return *w.ID
}

// GetLinks returns the Links field.
func (w *WorkItemUpdate) GetLinks() *ReferenceLinks {
	if w == nil {
		return nil
	}
	return w.Links
}

// GetRev returns the Rev field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetRev() int {
	if w == nil || w.Rev == nil {
		return 0
	}
	return *w.Rev
}

// GetRevisedBy returns the RevisedBy field.
func (w *WorkItemUpdate) GetRevisedBy() *IdentityRef {
	if w == nil {
		return nil
	}
	return w.RevisedBy
}

// GetRevisedDate returns the RevisedDate field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetRevisedDate() time.Time {
	if w == nil || w.RevisedDate == nil {
		return time.Time{}
	}
	return *w.RevisedDate
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetWorkItemID returns the WorkItemID field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetWorkItemID() int {
	if w == nil || w.WorkItemID == nil {
		return 0
	}
	return *w.WorkItemID
}
